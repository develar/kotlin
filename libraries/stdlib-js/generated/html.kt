//
// NOTE THIS FILE IS AUTO-GENERATED by the GenerateJavaScriptStubs.kt
//

package html

public native trait Object {
	public fun __defineGetter__(): Unit
	public fun __defineSetter__(): Unit
	public fun __lookupGetter__(): ()->Unit
	public fun __lookupSetter__(): ()->Unit
	public fun __proto__(): ()->Unit
}

public native trait Image : HTMLImageElement {
	public var constructor: Unit
	public var naturalWidth: Number
	public var naturalHeight: Number
}

public native trait Navigator {
	public var userAgent: String
	public var product: String
	public var appVersion: String
	public var appName: String
	public var appCodeName: String
	public var language: String
	public var systemLanguage: String
	public var userLanguage: String
	public var mimeTypes: Array
	public var platform: String
	public var plugins: Array
	public var onLine: Boolean
	public var cookieEnabled: Boolean

	public fun taintEnabled(): Boolean
	public fun javaEnabled(): Boolean
	public fun preference(): String
}

public native trait Screen {
	public var width: Number
	public var height: Number
	public var availHeight: Number
	public var availWidth: Number
	public var pixelDepth: Number
	public var colorDepth: Number
}

public native trait Option {
	public var defaultSelected: Boolean
	public var selected: Boolean
	public var text: String
	public var value: String
}

public native trait Location {
	public var href: String
	public var hash: String
	public var port: String
	public var host: String
	public var hostname: String
	public var pathname: String
	public var protocol: String
	public var port: String
	public var search: String
	public var target: String

	public fun reload(): Unit
	public fun replace(): Unit
}

public native trait XSLTProcessor {
	public var constructor: Unit

	public fun importStylesheet(): Unit
	public fun transformToDocument(): Document
	public fun transformToFragment(): DocumentFragment
}

public native trait DOMParser {
	public var constructor: Unit

	public fun parseFromString(): Document
}

public native trait XMLSerializer {
	public var constructor: Unit

	public fun serializeToStream(): Unit
	public fun serializeToString(): String
}

public native trait Event {
	public var data: Object[]
	public var height: Number
	public var x: Number
	public var screenX: Number
	public var clientX: Number
	public var offsetX: Number
	public var layerX: Number
	public var fromElement: Object
	public var wheelDelta: Number
	public var repeat: Boolean
	public var pageX: Number
	public var y: Number
	public var screenY: Number
	public var clientY: Number
	public var offsetY: Number
	public var layerY: Number
	public var pageY: Number
	public var width: Number
	public var modifiers: Number
	public var keyCode: Number
	public var `type`: String
	public var which: Object
	public var srcElement: Object
	public var toElement: Object
	public var cancelBubble: Boolean
	public var returnValue: Boolean
	public var altKey: Boolean
	public var ctrlKey: Boolean
	public var shiftKey: Boolean
	public var button: Boolean
	public var charCode: String
}

public native trait Selection {
	public var anchorNode: Node
	public var anchorOffset: Number
	public var focusNode: Node
	public var focusOffset: Number
	public var isCollapsed: Boolean
	public var rangeCount: Number
	public var `type`: string

	public fun getRangeAt(): Range
	public fun collapse(): Unit
	public fun extend(): Unit
	public fun collapseToStart(): Unit
	public fun collapseToEnd(): Unit
	public fun selectAllChildren(): Unit
	public fun addRange(): Unit
	public fun removeRange(): Unit
	public fun removeAllRanges(): Unit
	public fun containsNode(): Boolean
	public fun clear(): Boolean
	public fun empty(): Boolean
	public fun createRange(): TextRange
}

public native trait TextRange {
	public var htmlText: String
	public var text: String
	public var boundingWidth: Number
	public var boundingHeight: Number
	public var boundingLeft: Number
	public var offsetLeft: Number
	public var boundingTop: Number
	public var offsetTop: Number

	public fun getBookmark(): String
	public fun moveToBookmark(): Boolean
	public fun collapse(): Unit
	public fun expand(): Unit
	public fun duplicate(): TextRange
	public fun select(): Unit
	public fun parentElement(): Node
	public fun inRange(): boolean
	public fun isEqual(): boolean
	public fun scrollIntoView(): Unit
	public fun setEndPoint(): Unit
	public fun compareEndPoint(): Unit
	public fun move(): Unit
	public fun moveStart(): Unit
	public fun moveEnd(): Unit
	public fun pasteHTML(): Unit
	public fun moveToElementText(): Unit
	public fun compareEndPoints(): Number
}

public native trait document {
	public var selection: Selection
	public var namespaces: Array
	public var all: All
	public var styleSheets: Stylesheet[]

	public fun execCommand(): Boolean
}

public native trait CssRule {
	public var selectorText: String
}

public native trait Stylesheet {
	public var cssRules: CssRule[]
	public var rules: CssRule[]
	public var owningElement: HtmlElement

	public fun addRule(): Unit
	public fun insertRule(): Unit
	public fun removeRule(): Unit
	public fun deleteRule(): Unit
}

public native trait MozillaSideBar {
	public fun addPanel(): Unit
}

public native trait IEExternal {
	public fun AddFavorite(): Unit
}

public native trait History {
	public fun back(): Unit
	public fun forward(): Unit
	public fun go(): Unit
}

public native trait Console {
	public fun log(): Unit
}

public native trait Window {
}

public native trait window {
	public val document: HTMLDocument
	public val event: Event
	public val navigator: Navigator
	public val screen: Screen
	public val location: Location
	public var console: Console
	public var frameElement: Object
	public var opener: window
	public var window: window
	public var parent: window
	public var top: window
	public var self: Object
	public var frames: Array
	public var innerHeight: Number
	public var innerWidth: Number
	public var outerHeight: Number
	public var outerWidth: Number
	public var screenLeft: Number
	public var screenTop: Number
	public var scrollX: Number
	public var scrollY: Number
	public var pageXOffset: Number
	public var pageYOffset: Number
	public var scrollMaxX: Number
	public var scrollMaxY: Number
	public var status: String
	public var defaultStatus: String
	public var toolbar: Object
	public var menubar: Object
	public var scrollbars: Object
	public var directories: Object
	public var history: History
	public var sidebar: MozillaSideBar
	public var external: IEExternal
	public var opera: Boolean
	public var clipboardData: ClipboardData
	public var onload: ()->Unit
	public var onunload: ()->Unit

	public fun getSelection(): Selection
	public fun open(): window
	public fun print(): Unit
	public fun alert(): Unit
	public fun atob(): Unit
	public fun btoa(): Unit
	public fun confirm(): Unit
	public fun prompt(): Unit
	public fun clearInterval(): Unit
	public fun clearTimeout(): Unit
	public fun setInterval(): Number
	public fun setTimeout(): Number
	public fun ScriptEngine(): String
	public fun ScriptEngineBuildVersion(): String
	public fun ScriptEngineMajorVersion(): String
	public fun ScriptEngineMinorVersion(): String
	public fun scrollTo(): Unit
	public fun scrollBy(): Unit
	public fun moveTo(): Unit
	public fun moveBy(): Unit
	public fun resizeTo(): Unit
	public fun resizeBy(): Unit
	public fun getComputedStyle(): CSSStyleDeclaration
	public fun showModalDialog(): Object
	public fun attachEvent(): Unit
	public fun detachEvent(): Unit
	public fun addEventListener(): Unit
	public fun removeEventListener(): Unit
	public fun execScript(): Unit
	public fun CollectGarbage(): Unit
}

public native trait ClipboardData {
	public fun setData(): Boolean
	public fun getData(): String
	public fun clearData(): Boolean
}

public native trait Global {
	public val window: window
}

public native trait HTMLCollection {
	public val length: Number

	public fun item(): Node
	public fun namedItem(): Node
}

public native trait HTMLOptionsCollection {
	public val length: Number

	public fun item(): Node
	public fun namedItem(): Node
}

public native trait HTMLDocument : Document {
	public var title: String
	public val referrer: String
	public val domain: String
	public val URL: String
	public var body: HTMLElement
	public val images: HTMLCollection
	public val applets: HTMLCollection
	public val links: HTMLCollection
	public val forms: HTMLCollection
	public val anchors: HTMLCollection
	public var cookie: HTMLCollection
	public var defaultView: DocumentView
	public var activeElement: DocumentView
	public var compatMode: String
	public var parentWindow: window
	public var commandDispatcher: CommandDispatcher
	public var documentMode: Number
	public var onload: ()->Unit
	public var onunload: ()->Unit

	public fun open(): Unit
	public fun close(): Unit
	public fun write(): Unit
	public fun writeln(): Unit
	public fun getElementsByName(): NodeList
	public fun getElementsByClassName(): NodeList
	public fun createStyleSheet(): Stylesheet
	public fun getBoxObjectFor(): Node
	public fun querySelectorAll(): NodeList
	public fun querySelector(): Node
	public fun getAnonymousNodes(): Node[]
	public fun getAnonymousElementByAttribute(): NodeList
	public fun elementFromPoint(): HTMLElement
	public fun createEventObject(): Event
}

public native trait CommandDispatcher {
	public var focusedElement: HTMLElement
}

public native trait AbstractView {
}

public native trait DocumentView : AbstractView {
	public fun getComputedStyle(): CssStyle
}

public native trait CssStyle {
	public fun getPropertyValue(): String
}

public native trait HTMLElement : Element {
	public var id: String
	public var title: String
	public var lang: String
	public var dir: String
	public var className: String
	public var children: HTMLElement[]
	public var style: CSSStyleDeclaration
	public var clientWidth: Number
	public var clientHeight: Number
	public var clientTop: Number
	public var clientLeft: Number
	public var innerHTML: String
	public var innerText: String
	public var offsetWidth: Number
	public var offsetHeight: Number
	public var offsetTop: Number
	public var offsetLeft: Number
	public var offsetParent: HTMLElement
	public var scrollWidth: Number
	public var scrollHeight: Number
	public var scrollTop: Number
	public var scrollLeft: Number
	public var stylesheet: Stylesheet
	public val sourceIndex: Number
	public var onblur: ()->Unit
	public var onclick: ()->Unit
	public var ondblclick: ()->Unit
	public var onfocus: ()->Unit
	public var onkeydown: ()->Unit
	public var onkeyup: ()->Unit
	public var onmouseup: ()->Unit
	public var onmousedown: ()->Unit
	public var onmouseout: ()->Unit
	public var onmouseover: ()->Unit
	public var onmousemove: ()->Unit
	public var onresize: ()->Unit
	public var currentStyle: IEElementStyle
	public var runtimeStyle: IEElementStyle
	public var filters: Array
	public var boxObject: HTMLElement
	public var propertyName: String
	public var isDisabled: Boolean

	public fun insertAdjacentHTML(): Unit
	public fun doScroll(): Unit
	public fun insertAdjacentText(): Unit
	public fun attachEvent(): Unit
	public fun detachEvent(): Unit
	public fun fireEvent(): Unit
	public fun addBehavior(): Number
	public fun removeBehavior(): Boolean
	public fun getBoundingClientRect(): TextRange
	public fun showPopup(): Unit
	public fun hidePopup(): Unit
	public fun setCapture(): Unit
	public fun releaseCapture(): Unit
	public fun clearAttributes(): Unit
	public fun mergeAttributes(): Unit
}

public native trait CSSStyleDeclaration {
	public var cssText: String
	public var length: Number
	public var parentRule: CSSRule

	public fun getPropertyCSSValue(): CSSValue
	public fun getPropertyPriority(): String
	public fun getPropertyValue(): String
	public fun item(): String
	public fun removeProperty(): String
	public fun setProperty(): Unit
}

public native trait IEElementStyle : CSSStyleDeclaration {
	public var hasLayout: Boolean
}

public native trait HTMLHtmlElement : HTMLElement {
	public var version: String
}

public native trait HTMLHeadElement : HTMLElement {
	public var profile: String
}

public native trait HTMLLinkElement : HTMLElement {
	public var disabled: Boolean
	public var charset: String
	public var href: String
	public var hreflang: String
	public var media: String
	public var rel: String
	public var rev: String
	public var target: String
	public var `type`: String
}

public native trait HTMLTitleElement : HTMLElement {
	public var text: String
}

public native trait HTMLMetaElement : HTMLElement {
	public var content: String
	public var httpEquiv: String
	public var name: String
	public var scheme: String
}

public native trait HTMLBaseElement : HTMLElement {
	public var href: String
	public var target: String
}

public native trait HTMLIsIndexElement : HTMLElement {
	public val form: HTMLFormElement
	public var prompt: String
}

public native trait HTMLStyleElement : HTMLElement {
	public var disabled: Boolean
	public var media: String
	public var `type`: String
	public var styleSheet: Stylesheet
}

public native trait HTMLBodyElement : HTMLElement {
	public var aLink: String
	public var background: String
	public var bgColor: String
	public var link: String
	public var text: String
	public var vLink: String
	public var onload: ()->Unit
	public var onunload: ()->Unit
}

public native trait HTMLFormElement : HTMLElement {
	public val elements: HTMLCollection
	public val length: Number
	public var name: String
	public var acceptCharset: String
	public var action: String
	public var enctype: String
	public var method: String
	public var target: String

	public fun submit(): Unit
	public fun reset(): Unit
}

public native trait HTMLSelectElement : HTMLElement {
	public val `type`: String
	public var selectedIndex: Number
	public var value: String
	public var length: Number
	public val form: HTMLFormElement
	public val options: HTMLOptionsCollection
	public var disabled: Boolean
	public var multiple: Boolean
	public var name: String
	public var size: Number
	public var tabIndex: Number

	public fun add(): Unit
	public fun remove(): Unit
	public fun blur(): Unit
	public fun focus(): Unit
}

public native trait HTMLOptGroupElement : HTMLElement {
	public var disabled: Boolean
	public var label: String
}

public native trait HTMLOptionElement : HTMLElement {
	public val form: HTMLFormElement
	public var defaultSelected: Boolean
	public var text: String
	public var index: Number
	public var disabled: Boolean
	public var label: String
	public var selected: Boolean
	public var value: String
}

public native trait HTMLInputElement : HTMLElement {
	public var defaultValue: String
	public var defaultChecked: Boolean
	public val form: HTMLFormElement
	public var accept: String
	public var accessKey: String
	public var align: String
	public var alt: String
	public var checked: Boolean
	public var disabled: Boolean
	public var maxLength: Number
	public var name: String
	public var readOnly: Boolean
	public var size: Number
	public var src: String
	public var tabIndex: Number
	public var `type`: String
	public var useMap: String
	public var value: String
	public var selectionStart: Number
	public var selectionEnd: Number

	public fun blur(): Unit
	public fun focus(): Unit
	public fun select(): Unit
	public fun click(): Unit
	public fun setSelectionRange(): Unit
	public fun createTextRange(): TextRange
}

public native trait HTMLTextAreaElement : HTMLElement {
	public var defaultValue: String
	public val form: HTMLFormElement
	public var accessKey: String
	public var cols: Number
	public var disabled: Boolean
	public var name: String
	public var readOnly: Boolean
	public var rows: Number
	public var tabIndex: Number
	public var `type`: String
	public var value: String

	public fun blur(): Unit
	public fun focus(): Unit
	public fun select(): Unit
}

public native trait HTMLButtonElement : HTMLElement {
	public val form: HTMLFormElement
	public var accessKey: String
	public var disabled: Boolean
	public var name: String
	public var tabIndex: Number
	public var `type`: String
	public var value: String
}

public native trait HTMLLabelElement : HTMLElement {
	public val form: HTMLFormElement
	public var accessKey: String
	public var htmlFor: Unit
}

public native trait HTMLFieldSetElement : HTMLElement {
	public val form: HTMLFormElement
}

public native trait HTMLLegendElement : HTMLElement {
	public val form: HTMLFormElement
	public var accessKey: String
	public var align: String
}

public native trait HTMLUListElement : HTMLElement {
	public var compact: Boolean
	public var `type`: String
}

public native trait HTMLOListElement : HTMLElement {
	public var compact: Boolean
	public var start: Number
	public var `type`: String
}

public native trait HTMLDListElement : HTMLElement {
	public var compact: Boolean
}

public native trait HTMLDirectoryElement : HTMLElement {
	public var compact: Boolean
}

public native trait HTMLMenuElement : HTMLElement {
	public var compact: Boolean
}

public native trait HTMLLIElement : HTMLElement {
	public var `type`: String
	public var value: Number
}

public native trait HTMLDivElement : HTMLElement {
	public var align: String
}

public native trait HTMLParagraphElement : HTMLElement {
	public var align: String
}

public native trait HTMLHeadingElement : HTMLElement {
	public var align: String
}

public native trait HTMLQuoteElement : HTMLElement {
	public var cite: String
}

public native trait HTMLPreElement : HTMLElement {
	public var width: Number
}

public native trait HTMLBRElement : HTMLElement {
	public var clear: String
}

public native trait HTMLBaseFontElement : HTMLElement {
	public var color: String
	public var face: String
	public var size: Number
}

public native trait HTMLFontElement : HTMLElement {
	public var color: String
	public var face: String
	public var size: String
}

public native trait HTMLHRElement : HTMLElement {
	public var align: String
	public var noShade: Boolean
	public var size: String
	public var width: String
}

public native trait HTMLModElement : HTMLElement {
	public var cite: String
	public var dateTime: String
}

public native trait HTMLAnchorElement : HTMLElement {
	public var accessKey: String
	public var charset: String
	public var coords: String
	public var href: String
	public var hreflang: String
	public var name: String
	public var rel: String
	public var rev: String
	public var shape: String
	public var tabIndex: Number
	public var target: String
	public var `type`: String

	public fun blur(): Unit
	public fun focus(): Unit
}

public native trait HTMLImageElement : HTMLElement {
	public var name: String
	public var align: String
	public var alt: String
	public var border: String
	public var height: Number
	public var hspace: Number
	public var isMap: Boolean
	public var longDesc: String
	public var src: String
	public var useMap: String
	public var vspace: Number
	public var width: Number
	public var onload: ()->Unit
	public var onunload: ()->Unit
}

public native trait HTMLObjectElement : HTMLElement {
	public val form: HTMLFormElement
	public var code: String
	public var align: String
	public var archive: String
	public var border: String
	public var codeBase: String
	public var codeType: String
	public var data: String
	public var declare: Boolean
	public var height: String
	public var hspace: Number
	public var name: String
	public var standby: String
	public var tabIndex: Number
	public var `type`: String
	public var useMap: String
	public var vspace: Number
	public var width: String
	public val contentDocument: Document
}

public native trait HTMLParamElement : HTMLElement {
	public var name: String
	public var `type`: String
	public var value: String
	public var valueType: String
}

public native trait HTMLAppletElement : HTMLElement {
	public var align: String
	public var alt: String
	public var archive: String
	public var code: String
	public var codeBase: String
	public var height: String
	public var hspace: Number
	public var name: String
	public var object: String
	public var vspace: Number
	public var width: String
}

public native trait HTMLMapElement : HTMLElement {
	public val areas: HTMLCollection
	public var name: String
}

public native trait HTMLAreaElement : HTMLElement {
	public var accessKey: String
	public var alt: String
	public var coords: String
	public var href: String
	public var noHref: Boolean
	public var shape: String
	public var tabIndex: Number
	public var target: String
}

public native trait HTMLScriptElement : HTMLElement {
	public var text: String
	public var htmlFor: String
	public var event: String
	public var charset: String
	public var defer: Boolean
	public var src: String
	public var `type`: String
}

public native trait HTMLTableElement : HTMLElement {
	public var caption: HTMLTableCaptionElement
	public var tHead: HTMLTableSectionElement
	public var tFoot: HTMLTableSectionElement
	public val rows: HTMLCollection
	public val tBodies: HTMLCollection
	public var align: String
	public var bgColor: String
	public var border: String
	public var cellPadding: String
	public var cellSpacing: String
	public var frame: String
	public var rules: String
	public var summary: String
	public var width: String

	public fun createTHead(): HTMLElement
	public fun deleteTHead(): Unit
	public fun createTFoot(): HTMLElement
	public fun deleteTFoot(): Unit
	public fun createCaption(): HTMLElement
	public fun deleteCaption(): Unit
	public fun insertRow(): HTMLElement
	public fun deleteRow(): Unit
}

public native trait HTMLTableCaptionElement : HTMLElement {
	public var align: String
}

public native trait HTMLTableColElement : HTMLElement {
	public var align: String
	public var ch: String
	public var chOff: String
	public var span: Number
	public var vAlign: String
	public var width: String
}

public native trait HTMLTableSectionElement : HTMLElement {
	public var align: String
	public var ch: String
	public var chOff: String
	public var vAlign: String
	public val rows: HTMLCollection

	public fun insertRow(): HTMLElement
	public fun deleteRow(): Unit
}

public native trait HTMLTableRowElement : HTMLElement {
	public val rowIndex: Number
	public val sectionRowIndex: Number
	public val cells: HTMLCollection
	public var align: String
	public var bgColor: String
	public var ch: String
	public var chOff: String
	public var vAlign: String

	public fun insertCell(): HTMLElement
	public fun deleteCell(): Unit
}

public native trait HTMLTableCellElement : HTMLElement {
	public val cellIndex: Number
	public var abbr: String
	public var align: String
	public var axis: String
	public var bgColor: String
	public var ch: String
	public var chOff: String
	public var colSpan: Number
	public var headers: String
	public var height: String
	public var noWrap: Boolean
	public var rowSpan: Number
	public var scope: String
	public var vAlign: String
	public var width: String
}

public native trait HTMLFrameSetElement : HTMLElement {
	public var cols: String
	public var rows: String
}

public native trait HTMLFrameElement : HTMLElement {
	public var frameBorder: String
	public var longDesc: String
	public var marginHeight: String
	public var marginWidth: String
	public var name: String
	public var noResize: Boolean
	public var scrolling: String
	public var src: String
	public val contentDocument: Document
}

public native trait HTMLIFrameElement : HTMLElement {
	public var align: String
	public var frameBorder: String
	public var height: String
	public var longDesc: String
	public var marginHeight: String
	public var marginWidth: String
	public var name: String
	public var scrolling: String
	public var src: String
	public var width: String
	public val contentDocument: Document
	public val contentWindow: window
}
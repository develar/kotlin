//
// NOTE THIS FILE IS AUTO-GENERATED by the GenerateJavaScriptStubs.kt
//

package html

public native trait Event {
	public class object {
		public var CAPTURING_PHASE: Int = 1
		public var AT_TARGET: Int = 2
		public var BUBBLING_PHASE: Int = 2
	}

	public val `type`: String
	public val target: EventTarget
	public val currentTarget: EventTarget
	public val eventPhase: Int
	public val bubbles: Boolean
	public val cancelable: Boolean
	public val timeStamp: Date
	public val namespaceURI: String

	public fun stopPropagation(): Unit
	public fun preventDefault(): Unit
	public fun initEvent(): Unit
	public fun isCustom(): Boolean
	public fun stopImmediatePropagation(): Unit
	public fun isDefaultPrevented(): Boolean
	public fun initEventNS(): Unit
}

public native trait EventTarget {
	public fun addEventListener(): Unit
	public fun removeEventListener(): Unit
	public fun dispatchEvent(): Boolean
	public fun addEventListenerNS(): Unit
	public fun removeEventListenerNS(): Unit
	public fun willTriggerNS(): Boolean
	public fun hasEventListenerNS(): Boolean
}

public native trait EventListener {
	public fun handleEvent(): Unit
}

public native trait EventException {
	public var code: Number
}

public native trait DocumentEvent {
	public fun createEvent(): Event
	public fun canDispatch(): String
}

public native trait CustomEvent : Event {
	public fun setDispatchState(): Unit
	public fun isPropagationStopped(): Boolean
	public fun isImmediatePropagationStopped(): Boolean
}

public native trait UIEvent : Event {
	public val view: AbstractView
	public var detail: Long

	public fun initUIEvent(): Unit
	public fun initUIEventNS(): Unit
}

public native trait TextEvent : UIEvent {
	public val data: String

	public fun initTextEvent(): Unit
	public fun initTextEventNS(): Unit
}

public native trait MouseEvent : UIEvent {
	public var screenX: Long
	public var screenY: Long
	public var clientX: Long
	public var clientY: Long
	public var ctrlKey: Boolean
	public var shiftKey: Boolean
	public var altKey: Boolean
	public var metaKey: Boolean
	public var button: Number
	public var relatedTarget: EventTarget

	public fun getModifierState(): Boolean
	public fun initMouseEvent(): Unit
	public fun initMouseEventNS(): Unit
}

public native trait KeyboardEvent : UIEvent {
	public val keyIdentifier: String
	public val keyLocation: Number
	public val ctrlKey: Boolean
	public val shiftKey: Boolean
	public val altKey: Boolean
	public val metaKey: Boolean

	public fun getModifierState(): Boolean
	public fun initKeyboardEvent(): Unit
	public fun initKeyboardEventNS(): Unit
}

public native trait MutationEvent : UIEvent {
	public class object {
		public var MODIFICATION: Int = 1
		public var ADDITION: Int = 2
		public var REMOVAL: Int = 3
	}

	public val relatedNode: Node
	public val prevValue: String
	public val newValue: String
	public val attrName: String
	public val attrChange: Number

	public fun initMutationEvent(): Unit
	public fun initMutationEventNS(): Unit
}

public native trait MutationNameEvent : MutationEvent {
	public val prevNamespaceURI: String
	public val prevNodeName: String

	public fun initMutationNameEvent(): Unit
	public fun initMutationNameEventNS(): Unit
}